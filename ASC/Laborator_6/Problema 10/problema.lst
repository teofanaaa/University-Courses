     1                                  ;Se da un sir de octeti S. Sa se obtina in sirul D multimea elementelor din S.
     2                                  
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import printf msvcrt.dll  ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 0104020408020101            s db 1, 4, 2, 4, 8, 2, 1, 1
    17                                      len equ $-s
    18 00000008 00<rept>                    d times len db 0
    19 00000010 FF                          handle db -1
    20 00000011 25642000                    format db "%d ",0
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 BE[00000000]                    mov esi,s
    25 00000005 B908000000                      mov ecx,len ;lungimea sirului s
    26 0000000A BB00000000                      mov ebx,0 ;lungimea sirului d
    27                                          
    28 0000000F E335                            jecxz final
    29                                          repeta: 
    30 00000011 51                                  push ecx
    31 00000012 89D9                                mov ecx,ebx
    32 00000014 AC                                  lodsb
    33 00000015 BF[08000000]                        mov edi,d
    34 0000001A 88C2                                mov dl,al
    35 0000001C E305                                jecxz pune
    36                                              cautare:
    37 0000001E AE                                      scasb
    38 0000001F 7404                                    jz iesi
    39 00000021 E2FB                                loop cautare
    40                                              
    41                                              pune:
    42 00000023 AA                                      stosb
    43 00000024 43                                      inc ebx
    44                                              iesi:
    45 00000025 59                                      pop ecx
    46 00000026 E2E9                            loop repeta
    47                                          
    48 00000028 BE[08000000]                    mov esi,d
    49 0000002D 89D9                            mov ecx,ebx
    50                                          afisare:
    51 0000002F AC                                  lodsb 
    52 00000030 6698                                cbw 
    53 00000032 98                                  cwde
    54 00000033 60                                  pusha
    55 00000034 50                                  push eax
    56 00000035 68[11000000]                        push dword format
    57 0000003A FF15[00000000]                      call [printf]
    58 00000040 83C408                              add esp,4*2
    59 00000043 61                                  popa
    60 00000044 E2E9                            loop afisare
    61                                          
    62                                          final:
    63 00000046 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    64 00000048 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
