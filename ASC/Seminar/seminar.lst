     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,rename,fopen,fclose,remove               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import rename msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import remove msvcrt.dll
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 6F6C642E74787400            nume_fisier db "old.txt",0
    18 00000008 6E756D652E74787400          nume_nou db "nume.txt",0
    19 00000011 7700                        mod_acces db "w",0
    20 00000013 FFFFFFFF                    descriptor dd -1
    21 00000017 FFFFFFFF                    desc dd -1
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 68[11000000]                    push dword mod_acces
    25 00000005 68[00000000]                    push dword nume_fisier
    26                                          
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp,8
    29                                          
    30 00000013 83F800                          cmp eax,0
    31 00000016 744F                            je final
    32                                          
    33 00000018 A3[13000000]                    mov [descriptor],eax
    34                                          
    35 0000001D FF35[13000000]                  push dword [descriptor]
    36 00000023 FF15[00000000]                  call [fclose]
    37 00000029 83C404                          add esp,4
    38                                          
    39 0000002C FF35[13000000]                  push dword [descriptor]
    40 00000032 FF15[00000000]                  call [remove]
    41 00000038 83C404                          add esp,4
    42                                          
    43 0000003B 68[08000000]                    push dword nume_nou
    44 00000040 68[00000000]                    push dword nume_fisier
    45 00000045 FF15[00000000]                  call [rename]
    46 0000004B 83C408                          add esp,8    
    47                                          
    48 0000004E 83F800                          cmp eax,0
    49 00000051 7414                            je final
    50                                          
    51 00000053 A3[17000000]                    mov [desc],eax
    52                                          
    53 00000058 FF35[17000000]                  push dword [desc]
    54 0000005E FF15[00000000]                  call [fclose]
    55 00000064 83C404                          add esp,4
    56                                          
    57                                          final:
    58 00000067 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    59 00000069 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
