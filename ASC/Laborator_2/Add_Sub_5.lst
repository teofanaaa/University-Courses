     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 08                          a db 8; ...
    14 00000001 0A                          b db 10
    15 00000002 11                          c db 17
    16 00000003 02                          d db 2
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21 00000000 8A25[02000000]                  mov ah,[c] ;ah = c
    22 00000006 A0[00000000]                    mov al,[a] ;al = a
    23 0000000B 28C4                            sub ah,al ;ah = ah-al = c-a
    24 0000000D 2A25[03000000]                  sub ah,[d] ;ah = ah-d = c-a-d
    25 00000013 8A3D[02000000]                  mov bh,[c] ;bh = c
    26 00000019 2A3D[01000000]                  sub bh,[b]  ;bh = bh-b=c-b
    27 0000001F 00FC                            add ah,bh ;ah = ah+bh = (c-a-d)+(c-b)
    28 00000021 28C4                            sub ah, al ;ah = ah-al = (c-a-d)+(c-b)-a
    29                                          ; exit(0)
    30 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
